services:
  authentik-server:
    image: ghcr.io/goauthentik/server:latest
    container_name: authentik-server
    command: server
    env_file: ../.env
    environment:
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY}
      AUTHENTIK_POSTGRESQL__HOST: authentik-db
      AUTHENTIK_POSTGRESQL__USER: authentik
      AUTHENTIK_POSTGRESQL__NAME: authentik
      AUTHENTIK_POSTGRESQL__PASSWORD: ${AUTHENTIK_DB_PASS}
      AUTHENTIK_REDIS__HOST: authentik-redis
      AUTHENTIK_LISTEN__HTTP: 0.0.0.0:9000
      AUTHENTIK_LISTEN__HTTPS: 0.0.0.0:9443
    ports:
      - 9000:9000
      - 9443:9443
    volumes:
      - ${CONF_DIR}/authentik/media:/media
      - ${CONF_DIR}/authentik/templates:/templates
    depends_on:
      - authentik-db
      - authentik-redis
    networks:
      - backend

  authentik-worker:
    image: ghcr.io/goauthentik/server:latest
    container_name: authentik-worker
    command: worker
    env_file: ../.env
    environment:
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY}
      AUTHENTIK_POSTGRESQL__HOST: authentik-db
      AUTHENTIK_POSTGRESQL__USER: authentik
      AUTHENTIK_POSTGRESQL__NAME: authentik
      AUTHENTIK_POSTGRESQL__PASSWORD: ${AUTHENTIK_DB_PASS}
      AUTHENTIK_REDIS__HOST: authentik-redis
    depends_on:
      - authentik-db
      - authentik-redis
    networks:
      - backend

  authentik-db:
    image: postgres:alpine
    container_name: authentik-db
    restart: unless-stopped
    env_file: ../.env
    environment:
      POSTGRES_DB: authentik
      POSTGRES_USER: authentik
      POSTGRES_PASSWORD: ${AUTHENTIK_DB_PASS}
    volumes:
      - ${CONF_DIR}/authentik/db:/var/lib/postgresql/data
    networks:
      - backend

  authentik-redis:
    image: redis:alpine
    container_name: authentik-redis
    command: 
      - --save 60 1 
      - --loglevel warning
    restart: unless-stopped
    volumes:
      - authentik-redis:/data
    networks:
      - backend

volumes:
  authentik-redis:
    driver: local