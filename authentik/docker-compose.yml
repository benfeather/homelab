services:
  authentik-server:
    image: ghcr.io/goauthentik/server:latest
    container_name: authentik-server
    restart: unless-stopped
    command: server
    env_file: ../.env
    environment:
      AUTHENTIK_POSTGRESQL__HOST: authentik-postgres
      AUTHENTIK_POSTGRESQL__NAME: ${AUTHENTIK_DB_NAME}
      AUTHENTIK_POSTGRESQL__USER: ${AUTHENTIK_DB_USER}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${AUTHENTIK_DB_PASS}
      AUTHENTIK_REDIS__HOST: authentik-redis
    ports:
      - ${AUTHENTIK_PORT:-9000}:9000
      - ${AUTHENTIK_PORT_SECURE:-9443}:9443
    volumes:
      - ${CONFIG_PATH}/authentik/media:/media
      - ${CONFIG_PATH}/authentik/templates:/templates
    depends_on:
      - authentik-postgres
      - authentik-redis
    networks:
      - backend
      - frontend

  authentik-worker:
    image: ghcr.io/goauthentik/server:latest
    container_name: authentik-worker
    restart: unless-stopped
    user: root
    command: worker
    env_file: ../.env
    environment:
      AUTHENTIK_POSTGRESQL__HOST: authentik-postgres
      AUTHENTIK_POSTGRESQL__NAME: ${AUTHENTIK_DB_NAME}
      AUTHENTIK_POSTGRESQL__USER: ${AUTHENTIK_DB_USER}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${AUTHENTIK_DB_PASS}
      AUTHENTIK_REDIS__HOST: authentik-redis
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${CONFIG_PATH}/authentik/certs:/certs
      - ${CONFIG_PATH}/authentik/media:/media
      - ${CONFIG_PATH}/authentik/templates:/templates
    depends_on:
      - authentik-postgres
      - authentik-redis
    networks:
      - backend

  authentik-postgres:
    image: postgres:alpine
    container_name: authentik-postgres
    restart: unless-stopped
    env_file: ../.env
    environment:
      POSTGRES_DB: ${AUTHENTIK_DB_NAME}
      POSTGRES_USER: ${AUTHENTIK_DB_USER}
      POSTGRES_PASSWORD: ${AUTHENTIK_DB_PASS}
    volumes:
      - ${CONFIG_PATH}/authentik/db:/var/lib/postgresql/data
    networks:
      - backend

  authentik-redis:
    image: redis:alpine
    container_name: authentik-redis
    command: 
      - --save 60 1 
      - --loglevel warning
    restart: unless-stopped
    volumes:
      - authentik-redis:/data
    networks:
      - backend

volumes:
  authentik-redis:
    driver: local